---
# The playbook to install and configure Elasticsearch ELK
# Kibana status check: 
# http:<hostname>5601/status

# This play is to install Python required for Ansible on Ubuntu OS only. 
- hosts: all
  become: true
  gather_facts: false

  pre_tasks:
  - debug:
    msg: 
  - name: install Python on Ubuntu OS only
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    when: 1==1

# The play below are the tasks to install Elasticsearch ELK
- hosts: all
  become: yes
  gather_facts: true

  vars:
    elastic_owner: elastic
    elastic_group: elastic
    elastic_version: 7.3.2
    elastic_pkg_folder: 7.x
    elastic_home: /apps/elastic
         
  pre_tasks:
    - name: create the elastic user group
      user:
        name: "{{ elastic_group }}"
        state: present

    - name: create the elastic service user
      user:
        name: "{{ elastic_owner }}"
        group: "{{ elastic_group }}"
        state: present

  tasks:
  - name: "check if the {{elastic_home}} directory exists"
    stat:
      path: "{{ elastic_home }}"
    register: elastic_home_check

  - name: print debug information
    debug: 
      var: elastic_home_check

  - name: show conditional messages and facts (OS distribution)
    debug:
      msg: "{{ elastic_home }} does not existing. default location /var/lib/elasticsearch will be used ({{ ansible_distribution }})"
    when: elastic_home_check.stat.exists == false   

  - name: add elasticsearch public signing key
    apt_key:
      url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
      state: present
  
  - name: add elasticsearch repo definition
    apt_repository:
      repo: "deb https://artifacts.elastic.co/packages/{{ elastic_pkg_folder }}/apt stable main"
      update_cache: yes
      state: present

  - name: install elasticsearch ELK components
    apt:
      name: "{{item.name}}={{item.version}}"
      state: present
    loop:
      - {name: 'elasticsearch', version: '{{elastic_version}}' }
      - {name: 'kibana', version: '{{elastic_version}}' }

  - name: configure kibana server.host
    lineinfile:
      dest: /etc/kibana/kibana.yml
      regexp: '^server.host:'
      line: 'server.host: "0.0.0.0"'
      state: present
    notify:
      - restart kibana     

  - name: start earch of the component services 
    service: 
      name: "{{ item }}" 
      enabled: yes 
      state: started
    loop:
      - elasticsearch
      - kibana 

  handlers:
  - name: restart kibana
    service: name=kibana state=restarted

  - name: restart elasticsearch
    service: name=elasticsearch state=restarted  

#  roles:
#    - { role: elasticsearch }
#    - { role: kibana }
#    - { role: logstash }
#    - { role: filebeat } 

# kibana
#localhost:5601/status